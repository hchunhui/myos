INC=-I$(ROOT)/arch_x86/include -I$(ROOT)/include
AS=i686-myos-elf-as  #as -m32
CC=i686-myos-elf-gcc #gcc -m32
CPP=i686-myos-elf-gcc -E -nostdinc -fno-leading-underscore $(INC)
LD=i686-myos-elf-ld  #ld -melf_i386
CFLAGS=-march=i386 -g -O2  -fno-delete-null-pointer-checks -fomit-frame-pointer -finline-functions -fno-strict-aliasing -fno-leading-underscore -fno-builtin -fno-stack-protector -nostdinc -Wall $(INC) -c
OBJCOPY=i686-myos-elf-objcopy
AR=i686-myos-elf-ar

.PHONY: dep clean mk1 dep1 clean1

.c.o:
	$(CC) $(CFLAGS) \
	-o $*.o $<
.S.o:
	$(CC) $(CFLAGS) -D__ASSEMBLY__ \
	-o $*.o $<
clean:
	rm -f *.bin
	rm -f *.o
	rm -f *.a
	rm -f *~
dep:
	sed '/\#\#auto/d;/\#\#dep/q' Makefile>tmp_make
	for i in `ls *.c`;do `echo '$(CPP) -M' $$i`>>tmp_make;done
	for i in `ls *.S`;do `echo '$(CPP) -M -D__ASSEMBLY__' $$i`>>tmp_make;done 
	echo AUTOOBJS=|tr "\n" " ">tmp_make2
	ls -m *.c *.S|sed 's/\.[cS]/.o/g;s/,//g'|tr "\n" " "| \
	sed '/$$/a\#\#auto'|tr "\n" " "|sed '/$$/a\'>>tmp_make2
	cat tmp_make2 tmp_make>Makefile
	rm -f tmp_make tmp_make2
mk1:
	make -C lib
	make -C drv
	make -C kernel
	make -C arch
dep1:
	make -C lib dep
	make -C drv dep
	make -C kernel dep
	make -C arch dep
clean1:
	make -C lib clean
	make -C drv clean
	make -C kernel clean
	make -C arch clean
mykern.bin:arch_x86/init/build.a drv/build.a lib/build.a arch_x86/kernel/build.a kernel/build.a
	$(LD) -N -e _start -Ttext 0x100000 -o mykern.x --start-group $^ --end-group
	$(OBJCOPY) -j .text -j .rodata -j .eh_frame_hdr -j .eh_frame -j .data -O binary mykern.x mykern.bin

